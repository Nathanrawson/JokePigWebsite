{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\pigCult\\\\src\\\\components\\\\Resume\\\\abilities\\\\Ability.js\";\nimport React from 'react';\nimport './AbilitiesCss.css';\n\nconst Ability = props => {\n  const abilityRating = [...Array(5)].map((elementInArray, index) => {\n    if (index < props.stars) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-star\",\n        \"aria-hidden\": \"true\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        style: {\n          color: 'grey'\n        },\n        className: \"fa fa-star\",\n        \"aria-hidden\": \"true\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.ability.replace(/[^A-Z0-9]/ig, \"_\"),\n    className: \"ability-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ability\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.ability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: abilityRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 66\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Ability;\nexport default Ability;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ability\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/pigCult/src/components/Resume/abilities/Ability.js"],"names":["React","Ability","props","abilityRating","Array","map","elementInArray","index","stars","color","ability","replace"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAMC,aAAa,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC/D,QAAIA,KAAK,GAAGL,KAAK,CAACM,KAAlB,EAAyB;AACrB,0BAAO;AAAe,QAAA,SAAS,EAAC,YAAzB;AAAsC,uBAAY;AAAlD,SAAQD,KAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAe,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAtB;AAAyC,QAAA,SAAS,EAAC,YAAnD;AAAgE,uBAAY;AAA5E,SAAQF,KAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GANqB,CAAtB;AAOA,sBAEI;AAAK,IAAA,EAAE,EAAEL,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsB,aAAtB,EAAqC,GAArC,CAAT;AAAoD,IAAA,SAAS,EAAC,aAA9D;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BAAyB;AAAA,kBAAIT,KAAK,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eACyD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBP;AAAzB;AAAA;AAAA;AAAA;AAAA,YADzD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CAhBD;;KAAMF,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport './AbilitiesCss.css';\r\n\r\n\r\nconst Ability = (props) => {\r\n\r\n    const abilityRating = [...Array(5)].map((elementInArray, index) => {\r\n        if (index < props.stars) {\r\n            return <i key={index} className=\"fa fa-star\" aria-hidden=\"true\"></i>;\r\n        } else {\r\n            return <i key={index} style={{ color: 'grey' }} className=\"fa fa-star\" aria-hidden=\"true\"></i>;\r\n        }\r\n    })\r\n    return (\r\n\r\n        <div id={props.ability.replace(/[^A-Z0-9]/ig, \"_\")} className=\"ability-div\">\r\n            <div className=\"ability\"><p>{props.ability}</p></div><div className=\"rating\">{abilityRating}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Ability;"]},"metadata":{},"sourceType":"module"}